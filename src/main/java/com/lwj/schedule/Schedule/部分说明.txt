通过创建Store，调用store.use_GA(int day)来完成排班
参数是星期几，里面会用day%7+1来计算，所以直接给循环次数就可以了
for(int i=0;i<30;i++){store.use_GA(i);}


另外，排班的结果放在了Store.group当中，是ArrayList<Chromo>类型
Chromo是ArrayList<Integer>类型

group排班结果的解析---》提供了一个接口，在Store.decode
可以通过这个接口进行解析并返回需要的东西

decode接口中：
pre为上班前班次数
later为下班后班次数
len是正常上下班班次数
半小时为一班次
--->然后显示出来即可，或者封装成需要的数据结构


如果调试过程中出现死循环，则就是bug或者工作人数不够，需要调整人数比例
一般可以按我给出的 能跑的用例图片 进行比例放大
（主要因素就是预测模型中的最大值/客流的那个参数(默认3.8)来算出一个这个班次需要的最大人数
建议这个人数不要超过总人数的一办）

